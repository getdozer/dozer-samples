name: CI

on:
  pull_request:
    branches: [main]

concurrency:
  group: ci/${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Rust
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          export PATH="$HOME/.cargo/bin:$PATH"

      - name: Install Dozer and dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config
          sudo apt-get install -y build-essential

          curl -sLO https://github.com/protocolbuffers/protobuf/releases/download/v22.2/protoc-22.2-linux-x86_64.zip
          unzip protoc-22.2-linux-x86_64.zip -d $HOME/.local
          export PATH="$PATH:$HOME/.local/bin"

          git clone https://github.com/getdozer/dozer.git

      - name: Install and export Dozer binary
        run: |
          cd dozer
          cargo install --path . --locked
          mkdir -p $GITHUB_WORKSPACE/dozer-bin
          cp $HOME/.cargo/bin/dozer $GITHUB_WORKSPACE/dozer-bin/dozer

      - name: Archive Dozer binary
        uses: actions/upload-artifact@v2
        with:
          name: dozer-bin-artifact
          path: dozer-bin

  test:
  runs-on: ubuntu-latest
  needs: build
  steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Download Dozer binary artifact
      uses: actions/download-artifact@v2
      with:
        name: dozer-bin-artifact

    - name: Create directory structure for Dozer binary
      run: |
        mkdir -p $HOME/.cargo/bin
        cp dozer-bin/dozer $HOME/.cargo/bin/dozer
      working-directory: $GITHUB_WORKSPACE

    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
        run_install: false

    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

    - name: Restore pnpm cache
      uses: actions/cache@v3
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Install dependencies
      run: pnpm install

    - name: Run tests
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
        BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
        SN_SERVER: ${{ secrets.SN_SERVER }}
        SN_USER: ${{ secrets.SN_USER }}
        SN_PASSWORD: ${{ secrets.SN_PASSWORD }}
        SN_DATABASE: ${{ secrets.SN_DATABASE }}
        SN_WAREHOUSE: ${{ secrets.SN_WAREHOUSE }}
        SN_ROLE: ${{ secrets.SN_ROLE }}
        ETH_WSS_URL: ${{ secrets.ETH_WSS_URL }}
      run: pnpm test
